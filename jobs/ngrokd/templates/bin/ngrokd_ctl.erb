#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status

# Setup common env vars and folders
source /var/vcap/packages/bosh-helpers/ctl_setup.sh 'ngrokd'
export NGROKD_PID_FILE=${NGROKD_PID_DIR}/ngrokd.pid

case $1 in

  start)
    pid_guard ${NGROKD_PID_FILE} ${JOB_NAME}
    echo $$ > ${NGROKD_PID_FILE}

    # Copy or generate SSL certificates
    mkdir -p ${NGROKD_CERTS_DIR}
    if [ -s ${NGROKD_CONF_DIR}/ngrokd.crt -a -s ${NGROKD_CONF_DIR}/ngrokd.key ]; then
      cp ${NGROKD_CONF_DIR}/ngrokd.crt ${NGROKD_CERTS_DIR}
      cp ${NGROKD_CONF_DIR}/ngrokd.key ${NGROKD_CERTS_DIR}
    elif [ ! -f ${NGROKD_CERTS_DIR}/ngrokd.crt -o ! -f ${NGROKD_CERTS_DIR}/ngrokd.key ]; then
      openssl req -nodes -new -newkey rsa:1024 -out ${NGROKD_CERTS_DIR}/ngrokd.csr \
             -keyout ${NGROKD_CERTS_DIR}/ngrokd.key -subj "/CN=${NGROKD_DOMAIN}"
      openssl x509 -req -days 3650 -in ${NGROKD_CERTS_DIR}/ngrokd.csr \
              -signkey ${NGROKD_CERTS_DIR}/ngrokd.key -out ${NGROKD_CERTS_DIR}/ngrokd.crt
    fi
    chown -R ${NGROKD_USER}:${NGROKD_GROUP} ${NGROKD_CERTS_DIR}

    # Start ngrokd service
    exec chpst -u ${NGROKD_USER}:${NGROKD_GROUP} ngrokd \
      -domain="${NGROKD_DOMAIN}" \
      -httpAddr="${NGROKD_HTTP_ADDRESS}" \
      -httpsAddr="${NGROKD_HTTPS_ADDRESS}" \
      -tunnelAddr="${NGROKD_TUNNEL_ADDRESS}" \
      -tlsKey="${NGROKD_CERTS_DIR}/ngrokd.key" \
      -tlsCrt="${NGROKD_CERTS_DIR}/ngrokd.crt" \
      >>${NGROKD_LOG_DIR}/${OUTPUT_LABEL}.stdout.log \
      2>>${NGROKD_LOG_DIR}/${OUTPUT_LABEL}.stderr.log
    ;;

  stop)
    # Stop ngrokd service
    kill_and_wait ${NGROKD_PID_FILE}
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    exit 1
    ;;

esac
exit 0
